<<<<<<< HEAD
define(['dart_sdk', 'packages/flutter/src/widgets/widget_span.dart', 'packages/flutter/src/cupertino/route.dart', 'packages/flutter/src/foundation/debug.dart', 'packages/flutter/src/material/icon_button.dart', 'packages/flutter/src/animation/listener_helpers.dart'], (function load__packages__flutter__src__material__page_dart(dart_sdk, packages__flutter__src__widgets__widget_span$46dart, packages__flutter__src__cupertino__route$46dart, packages__flutter__src__foundation__debug$46dart, packages__flutter__src__material__icon_button$46dart, packages__flutter__src__animation__listener_helpers$46dart) {
=======
define(['dart_sdk', 'packages/flutter/src/widgets/widget_span.dart', 'packages/flutter/src/animation/listener_helpers.dart'], (function load__packages__fluro__src__common_dart(dart_sdk, packages__flutter__src__widgets__widget_span$46dart, packages__flutter__src__animation__listener_helpers$46dart) {
>>>>>>> 9fed4871f8cb2e24becf4331c7fe9d1d7a564371
  'use strict';
  const core = dart_sdk.core;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
<<<<<<< HEAD
  const pages = packages__flutter__src__widgets__widget_span$46dart.src__widgets__pages;
  const basic = packages__flutter__src__widgets__widget_span$46dart.src__widgets__basic;
  const widget_inspector = packages__flutter__src__widgets__widget_span$46dart.src__widgets__widget_inspector;
  const framework = packages__flutter__src__widgets__widget_span$46dart.src__widgets__framework;
  const navigator = packages__flutter__src__widgets__widget_span$46dart.src__widgets__navigator;
  const route = packages__flutter__src__cupertino__route$46dart.src__cupertino__route;
  const assertions = packages__flutter__src__foundation__debug$46dart.src__foundation__assertions;
  const theme$ = packages__flutter__src__material__icon_button$46dart.src__material__theme;
  const animation = packages__flutter__src__animation__listener_helpers$46dart.src__animation__animation;
  var page = Object.create(dart.library);
  dart._checkModuleNullSafetyMode(false);
  var T$ = {
    VoidTobool: () => (T$.VoidTobool = dart.constFn(dart.fnType(core.bool, [])))(),
    _LocationL: () => (T$._LocationL = dart.constFn(dart.legacy(widget_inspector._Location)))()
=======
  const framework = packages__flutter__src__widgets__widget_span$46dart.src__widgets__framework;
  const navigator = packages__flutter__src__widgets__widget_span$46dart.src__widgets__navigator;
  const animation = packages__flutter__src__animation__listener_helpers$46dart.src__animation__animation;
  var common = Object.create(dart.library);
  dart._checkModuleNullSafetyMode(false);
  var T = {
    HandlerTypeL: () => (T.HandlerTypeL = dart.constFn(dart.legacy(common.HandlerType)))(),
    TransitionTypeL: () => (T.TransitionTypeL = dart.constFn(dart.legacy(common.TransitionType)))(),
    RouteMatchTypeL: () => (T.RouteMatchTypeL = dart.constFn(dart.legacy(common.RouteMatchType)))()
>>>>>>> 9fed4871f8cb2e24becf4331c7fe9d1d7a564371
  };
  var T$Eval = Object.assign({
    _: () => T$Eval
  }, T$);
  var S = {
    _: () => S
  };
  var S$Eval = Object.assign({
    _: () => S$Eval
  }, S);
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.const({
<<<<<<< HEAD
        __proto__: core.Duration.prototype,
        [Duration__duration]: 300000
      });
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scopesRoute",
        [_Location_column]: 7,
        [_Location_line]: 118,
        [_Location_file]: null
=======
        __proto__: common.HandlerType.prototype,
        [_name$]: "HandlerType.route",
        index: 0
      });
    },
    get C1() {
      return C[1] = dart.const({
        __proto__: common.HandlerType.prototype,
        [_name$]: "HandlerType.function",
        index: 1
      });
    },
    get C2() {
      return C[2] = dart.constList([C[0] || CT.C0, C[1] || CT.C1], T.HandlerTypeL());
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: common.TransitionType.prototype,
        [_name$]: "TransitionType.native",
        index: 0
>>>>>>> 9fed4871f8cb2e24becf4331c7fe9d1d7a564371
      });
    },
    get C4() {
      return C[4] = dart.const({
<<<<<<< HEAD
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "explicitChildNodes",
        [_Location_column]: 7,
        [_Location_line]: 119,
        [_Location_file]: null
=======
        __proto__: common.TransitionType.prototype,
        [_name$]: "TransitionType.nativeModal",
        index: 1
>>>>>>> 9fed4871f8cb2e24becf4331c7fe9d1d7a564371
      });
    },
    get C5() {
      return C[5] = dart.const({
<<<<<<< HEAD
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 120,
        [_Location_file]: null
      });
    },
    get C2() {
      return C[2] = dart.constList([C[3] || CT.C3, C[4] || CT.C4, C[5] || CT.C5], T$._LocationL());
    },
    get C1() {
      return C[1] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[2] || CT.C2,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 117,
        [_Location_file]: "file:///D:/flutterSDK/flutter/packages/flutter/lib/src/material/page.dart"
      });
    }
  }, false);
  var C = Array(6).fill(void 0);
  var I = [
    "file:///D:/flutterSDK/flutter/packages/flutter/lib/src/material/page.dart",
    "package:flutter/src/material/page.dart"
  ];
  var builder$ = dart.privateName(page, "MaterialPageRoute.builder");
  var maintainState$ = dart.privateName(page, "MaterialPageRoute.maintainState");
  var Duration__duration = dart.privateName(core, "Duration._duration");
  var _Location_parameterLocations = dart.privateName(widget_inspector, "_Location.parameterLocations");
  var _Location_name = dart.privateName(widget_inspector, "_Location.name");
  var _Location_column = dart.privateName(widget_inspector, "_Location.column");
  var _Location_line = dart.privateName(widget_inspector, "_Location.line");
  var _Location_file = dart.privateName(widget_inspector, "_Location.file");
  const _is_MaterialRouteTransitionMixin_default = Symbol('_is_MaterialRouteTransitionMixin_default');
  page.MaterialRouteTransitionMixin$ = dart.generic(T => {
    class MaterialRouteTransitionMixin extends pages.PageRoute$(T) {}
    MaterialRouteTransitionMixin[dart.mixinOn] = PageRoute => class MaterialRouteTransitionMixin extends PageRoute {
      get transitionDuration() {
        return C[0] || CT.C0;
      }
      get barrierColor() {
        return null;
      }
      get barrierLabel() {
        return null;
      }
      canTransitionTo(nextRoute) {
        if (nextRoute == null) dart.nullFailed(I[0], 95, 49, "nextRoute");
        return page.MaterialRouteTransitionMixin.is(nextRoute) && !dart.test(nextRoute.fullscreenDialog) || route.CupertinoRouteTransitionMixin.is(nextRoute) && !dart.test(nextRoute.fullscreenDialog);
      }
      buildPage(context, animation, secondaryAnimation) {
        if (context == null) dart.nullFailed(I[0], 103, 18, "context");
        if (animation == null) dart.nullFailed(I[0], 104, 23, "animation");
        if (secondaryAnimation == null) dart.nullFailed(I[0], 105, 23, "secondaryAnimation");
        let result = this.buildContent(context);
        if (!dart.test(dart.fn(() => {
          if (result == null) {
            dart.throw(assertions.FlutterError.new("The builder for route \"" + dart.str(this.settings.name) + "\" returned null.\n" + "Route builders must never return null."));
          }
          return true;
        }, T$.VoidTobool())())) dart.assertFailed(null, I[0], 108, 12, "() {\r\n      if (result == null) {\r\n        throw FlutterError(\r\n          'The builder for route \"${settings.name}\" returned null.\\n'\r\n          'Route builders must never return null.'\r\n        );\r\n      }\r\n      return true;\r\n    }()");
        return new basic.Semantics.new({scopesRoute: true, explicitChildNodes: true, child: result, $creationLocationd_0dea112b090073317d4: C[1] || CT.C1});
      }
      buildTransitions(context, animation, secondaryAnimation, child) {
        if (context == null) dart.nullFailed(I[0], 125, 40, "context");
        if (animation == null) dart.nullFailed(I[0], 125, 67, "animation");
        if (secondaryAnimation == null) dart.nullFailed(I[0], 125, 96, "secondaryAnimation");
        if (child == null) dart.nullFailed(I[0], 125, 123, "child");
        let theme = theme$.Theme.of(context).pageTransitionsTheme;
        return theme.buildTransitions(T, this, context, animation, secondaryAnimation, child);
      }
    };
    dart.addTypeTests(MaterialRouteTransitionMixin);
    MaterialRouteTransitionMixin.prototype[_is_MaterialRouteTransitionMixin_default] = true;
    dart.addTypeCaches(MaterialRouteTransitionMixin);
    MaterialRouteTransitionMixin[dart.implements] = () => [pages.PageRoute$(T)];
    dart.setMethodSignature(MaterialRouteTransitionMixin, () => ({
      __proto__: dart.getMethods(MaterialRouteTransitionMixin.__proto__),
      buildPage: dart.fnType(framework.Widget, [framework.BuildContext, animation.Animation$(core.double), animation.Animation$(core.double)])
    }));
    dart.setGetterSignature(MaterialRouteTransitionMixin, () => ({
      __proto__: dart.getGetters(MaterialRouteTransitionMixin.__proto__),
      transitionDuration: core.Duration,
      barrierColor: dart.nullable(ui.Color),
      barrierLabel: dart.nullable(core.String)
    }));
    dart.setLibraryUri(MaterialRouteTransitionMixin, I[1]);
    return MaterialRouteTransitionMixin;
  });
  page.MaterialRouteTransitionMixin = page.MaterialRouteTransitionMixin$();
  dart.addTypeTests(page.MaterialRouteTransitionMixin, _is_MaterialRouteTransitionMixin_default);
  const _is_MaterialPageRoute_default = Symbol('_is_MaterialPageRoute_default');
  page.MaterialPageRoute$ = dart.generic(T => {
    const PageRoute_MaterialRouteTransitionMixin$36 = class PageRoute_MaterialRouteTransitionMixin extends pages.PageRoute$(T) {};
    (PageRoute_MaterialRouteTransitionMixin$36.new = function(opts) {
      PageRoute_MaterialRouteTransitionMixin$36.__proto__.new.call(this, opts);
    }).prototype = PageRoute_MaterialRouteTransitionMixin$36.prototype;
    dart.applyMixin(PageRoute_MaterialRouteTransitionMixin$36, page.MaterialRouteTransitionMixin$(T));
    class MaterialPageRoute extends PageRoute_MaterialRouteTransitionMixin$36 {
      get builder() {
        return this[builder$];
      }
      set builder(value) {
        super.builder = value;
      }
      get maintainState() {
        return this[maintainState$];
      }
      set maintainState(value) {
        super.maintainState = value;
      }
      buildContent(context) {
        let t0;
        if (context == null) dart.nullFailed(I[0], 54, 36, "context");
        t0 = context;
        return this.builder(t0);
      }
      get debugLabel() {
        return dart.str(super.debugLabel) + "(" + dart.str(this.settings.name) + ")";
      }
    }
    (MaterialPageRoute.new = function(opts) {
      let builder = opts && 'builder' in opts ? opts.builder : null;
      if (builder == null) dart.nullFailed(I[0], 39, 19, "builder");
      let settings = opts && 'settings' in opts ? opts.settings : null;
      let maintainState = opts && 'maintainState' in opts ? opts.maintainState : true;
      if (maintainState == null) dart.nullFailed(I[0], 41, 10, "maintainState");
      let fullscreenDialog = opts && 'fullscreenDialog' in opts ? opts.fullscreenDialog : false;
      if (fullscreenDialog == null) dart.nullFailed(I[0], 42, 10, "fullscreenDialog");
      this[builder$] = builder;
      this[maintainState$] = maintainState;
      if (!(builder != null)) dart.assertFailed(null, I[0], 43, 15, "builder != null");
      if (!(maintainState != null)) dart.assertFailed(null, I[0], 44, 15, "maintainState != null");
      if (!(fullscreenDialog != null)) dart.assertFailed(null, I[0], 45, 15, "fullscreenDialog != null");
      MaterialPageRoute.__proto__.new.call(this, {settings: settings, fullscreenDialog: fullscreenDialog});
      if (!dart.test(this.opaque)) dart.assertFailed(null, I[0], 47, 12, "opaque");
    }).prototype = MaterialPageRoute.prototype;
    dart.addTypeTests(MaterialPageRoute);
    MaterialPageRoute.prototype[_is_MaterialPageRoute_default] = true;
    dart.addTypeCaches(MaterialPageRoute);
    dart.setMethodSignature(MaterialPageRoute, () => ({
      __proto__: dart.getMethods(MaterialPageRoute.__proto__),
      buildContent: dart.fnType(framework.Widget, [framework.BuildContext])
    }));
    dart.setLibraryUri(MaterialPageRoute, I[1]);
    dart.setFieldSignature(MaterialPageRoute, () => ({
      __proto__: dart.getFields(MaterialPageRoute.__proto__),
      builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext])),
      maintainState: dart.finalFieldType(core.bool)
    }));
    return MaterialPageRoute;
  });
  page.MaterialPageRoute = page.MaterialPageRoute$();
  dart.addTypeTests(page.MaterialPageRoute, _is_MaterialPageRoute_default);
  var child$ = dart.privateName(page, "MaterialPage.child");
  var maintainState$0 = dart.privateName(page, "MaterialPage.maintainState");
  var fullscreenDialog$ = dart.privateName(page, "MaterialPage.fullscreenDialog");
  const _is_MaterialPage_default = Symbol('_is_MaterialPage_default');
  page.MaterialPage$ = dart.generic(T => {
    var _PageBasedMaterialPageRouteOfT = () => (_PageBasedMaterialPageRouteOfT = dart.constFn(page._PageBasedMaterialPageRoute$(T)))();
    class MaterialPage extends navigator.Page$(T) {
      get child() {
        return this[child$];
      }
      set child(value) {
        super.child = value;
      }
      get maintainState() {
        return this[maintainState$0];
      }
      set maintainState(value) {
        super.maintainState = value;
      }
      get fullscreenDialog() {
        return this[fullscreenDialog$];
      }
      set fullscreenDialog(value) {
        super.fullscreenDialog = value;
      }
      createRoute(context) {
        if (context == null) dart.nullFailed(I[0], 175, 37, "context");
        return new (_PageBasedMaterialPageRouteOfT()).new({page: this});
      }
    }
    (MaterialPage.new = function(opts) {
      let child = opts && 'child' in opts ? opts.child : null;
      if (child == null) dart.nullFailed(I[0], 154, 19, "child");
      let maintainState = opts && 'maintainState' in opts ? opts.maintainState : true;
      if (maintainState == null) dart.nullFailed(I[0], 155, 10, "maintainState");
      let fullscreenDialog = opts && 'fullscreenDialog' in opts ? opts.fullscreenDialog : false;
      if (fullscreenDialog == null) dart.nullFailed(I[0], 156, 10, "fullscreenDialog");
      let key = opts && 'key' in opts ? opts.key : null;
      let name = opts && 'name' in opts ? opts.name : null;
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      this[child$] = child;
      this[maintainState$0] = maintainState;
      this[fullscreenDialog$] = fullscreenDialog;
      if (!(child != null)) dart.assertFailed(null, I[0], 160, 15, "child != null");
      if (!(maintainState != null)) dart.assertFailed(null, I[0], 161, 15, "maintainState != null");
      if (!(fullscreenDialog != null)) dart.assertFailed(null, I[0], 162, 15, "fullscreenDialog != null");
      MaterialPage.__proto__.new.call(this, {key: key, name: name, arguments: $arguments});
      ;
    }).prototype = MaterialPage.prototype;
    dart.addTypeTests(MaterialPage);
    MaterialPage.prototype[_is_MaterialPage_default] = true;
    dart.addTypeCaches(MaterialPage);
    dart.setMethodSignature(MaterialPage, () => ({
      __proto__: dart.getMethods(MaterialPage.__proto__),
      createRoute: dart.fnType(navigator.Route$(T), [framework.BuildContext])
    }));
    dart.setLibraryUri(MaterialPage, I[1]);
    dart.setFieldSignature(MaterialPage, () => ({
      __proto__: dart.getFields(MaterialPage.__proto__),
      child: dart.finalFieldType(framework.Widget),
      maintainState: dart.finalFieldType(core.bool),
      fullscreenDialog: dart.finalFieldType(core.bool)
    }));
    return MaterialPage;
  });
  page.MaterialPage = page.MaterialPage$();
  dart.addTypeTests(page.MaterialPage, _is_MaterialPage_default);
  var _page = dart.privateName(page, "_page");
  const _is__PageBasedMaterialPageRoute_default = Symbol('_is__PageBasedMaterialPageRoute_default');
  page._PageBasedMaterialPageRoute$ = dart.generic(T => {
    var MaterialPageOfT = () => (MaterialPageOfT = dart.constFn(page.MaterialPage$(T)))();
    const PageRoute_MaterialRouteTransitionMixin$36 = class PageRoute_MaterialRouteTransitionMixin extends pages.PageRoute$(T) {};
    (PageRoute_MaterialRouteTransitionMixin$36.new = function(opts) {
      PageRoute_MaterialRouteTransitionMixin$36.__proto__.new.call(this, opts);
    }).prototype = PageRoute_MaterialRouteTransitionMixin$36.prototype;
    dart.applyMixin(PageRoute_MaterialRouteTransitionMixin$36, page.MaterialRouteTransitionMixin$(T));
    class _PageBasedMaterialPageRoute extends PageRoute_MaterialRouteTransitionMixin$36 {
      get [_page]() {
        return MaterialPageOfT().as(this.settings);
      }
      buildContent(context) {
        if (context == null) dart.nullFailed(I[0], 195, 36, "context");
        return this[_page].child;
      }
      get maintainState() {
        return this[_page].maintainState;
      }
      get fullscreenDialog() {
        return this[_page].fullscreenDialog;
      }
      get debugLabel() {
        return dart.str(super.debugLabel) + "(" + dart.str(this[_page].name) + ")";
      }
    }
    (_PageBasedMaterialPageRoute.new = function(opts) {
      let page = opts && 'page' in opts ? opts.page : null;
      if (page == null) dart.nullFailed(I[0], 186, 30, "page");
      if (!(page != null)) dart.assertFailed(null, I[0], 187, 15, "page != null");
      _PageBasedMaterialPageRoute.__proto__.new.call(this, {settings: page});
      if (!dart.test(this.opaque)) dart.assertFailed(null, I[0], 189, 12, "opaque");
    }).prototype = _PageBasedMaterialPageRoute.prototype;
    dart.addTypeTests(_PageBasedMaterialPageRoute);
    _PageBasedMaterialPageRoute.prototype[_is__PageBasedMaterialPageRoute_default] = true;
    dart.addTypeCaches(_PageBasedMaterialPageRoute);
    dart.setMethodSignature(_PageBasedMaterialPageRoute, () => ({
      __proto__: dart.getMethods(_PageBasedMaterialPageRoute.__proto__),
      buildContent: dart.fnType(framework.Widget, [framework.BuildContext])
    }));
    dart.setGetterSignature(_PageBasedMaterialPageRoute, () => ({
      __proto__: dart.getGetters(_PageBasedMaterialPageRoute.__proto__),
      [_page]: page.MaterialPage$(T),
      maintainState: core.bool,
      fullscreenDialog: core.bool
    }));
    dart.setLibraryUri(_PageBasedMaterialPageRoute, I[1]);
    return _PageBasedMaterialPageRoute;
  });
  page._PageBasedMaterialPageRoute = page._PageBasedMaterialPageRoute$();
  dart.addTypeTests(page._PageBasedMaterialPageRoute, _is__PageBasedMaterialPageRoute_default);
  dart.trackLibraries("packages/flutter/src/material/page.dart", {
    "package:flutter/src/material/page.dart": page
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["page.dart"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqFqC;MAAiC;;AAGzC;MAAI;;AAGH;MAAI;;YAGc;AAE5C,cAAkB,AAChB,sCADM,SAAS,gBAAqC,AAAU,SAAD,sBAC/C,uCAAV,SAAS,gBAAsC,AAAU,SAAD;MAChE;gBAIe,SACK,WACA;YAFL;YACK;YACA;AAEL,qBAAS,kBAAa,OAAO;AAC1C,uBAAO,AAQN;AAPC,cAAI,AAAO,MAAD;AAIP,YAHD,WAAM,4BAAY,AAChB,sCAA0B,AAAS,sBAAK,wBACxC;;AAGJ,gBAAO;;AAET,cAAO,uCACQ,0BACO,aACb,MAAM;MAEjB;uBAGqC,SAA2B,WAA6B,oBAA2B;YAAnF;YAA2B;YAA6B;YAA2B;AAC3F,oBAAc,AAAY,gBAAT,OAAO;AACnD,cAAO,AAAM,MAAD,qBAAqB,MAAM,OAAO,EAAE,SAAS,EAAE,kBAAkB,EAAE,KAAK;MACtF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MA7EoB;;;;;;MAMT;;;;;;mBAHsB;;;AAAY,aAAQ,OAAO;cAAf,AAAO;MAAS;;AAMpC,cAAuC,UAA9B,oBAAW,eAAG,AAAS,sBAAK;MAAE;;;UArBhD;;UACC;UACV;;UACA;;MAHS;MAET;YAEK,AAAQ,OAAD;YACP,AAAc,aAAD;YACb,AAAiB,gBAAD;AACvB,4DAAgB,QAAQ,oBAAoB,gBAAgB;AAC/D,qBAAO;IACT;;;;;;;;;;;;;;;;;;;;;;;;;MAsHa;;;;;;MAGF;;;;;;MAGA;;;;;;;YAGuB;AAChC,cAAO,mDAAqC;MAC9C;;;UAvBgB;;UACT;;UACA;;UACK;UACF;UACA;MALM;MACT;MACA;YAIK,AAAM,KAAD;YACL,AAAc,aAAD;YACb,AAAiB,gBAAD;AACvB,kDAAW,GAAG,QAAQ,IAAI,aAAa;;IAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BzB,cAAS,sBAAT;MAA2B;;YAGvB;AAC/B,cAAO,AAAM;MACf;;AAG0B,cAAA,AAAM;MAAa;;AAGhB,cAAA,AAAM;MAAgB;;AAG1B,cAAoC,UAA3B,oBAAW,eAAG,AAAM,oBAAK;MAAE;;;UApBlC;;YACf,AAAK,IAAD;AACX,sEAAgB,IAAI;AACvB,qBAAO;IACT","file":"../../../../../../../packages/flutter/src/material/page.dart.lib.js"}');
  // Exports:
  return {
    src__material__page: page
  };
}));

//# sourceMappingURL=page.dart.lib.js.map
=======
        __proto__: common.TransitionType.prototype,
        [_name$]: "TransitionType.inFromLeft",
        index: 2
      });
    },
    get C6() {
      return C[6] = dart.const({
        __proto__: common.TransitionType.prototype,
        [_name$]: "TransitionType.inFromTop",
        index: 3
      });
    },
    get C7() {
      return C[7] = dart.const({
        __proto__: common.TransitionType.prototype,
        [_name$]: "TransitionType.inFromRight",
        index: 4
      });
    },
    get C8() {
      return C[8] = dart.const({
        __proto__: common.TransitionType.prototype,
        [_name$]: "TransitionType.inFromBottom",
        index: 5
      });
    },
    get C9() {
      return C[9] = dart.const({
        __proto__: common.TransitionType.prototype,
        [_name$]: "TransitionType.fadeIn",
        index: 6
      });
    },
    get C10() {
      return C[10] = dart.const({
        __proto__: common.TransitionType.prototype,
        [_name$]: "TransitionType.custom",
        index: 7
      });
    },
    get C11() {
      return C[11] = dart.const({
        __proto__: common.TransitionType.prototype,
        [_name$]: "TransitionType.material",
        index: 8
      });
    },
    get C12() {
      return C[12] = dart.const({
        __proto__: common.TransitionType.prototype,
        [_name$]: "TransitionType.materialFullScreenDialog",
        index: 9
      });
    },
    get C13() {
      return C[13] = dart.const({
        __proto__: common.TransitionType.prototype,
        [_name$]: "TransitionType.cupertino",
        index: 10
      });
    },
    get C14() {
      return C[14] = dart.const({
        __proto__: common.TransitionType.prototype,
        [_name$]: "TransitionType.cupertinoFullScreenDialog",
        index: 11
      });
    },
    get C15() {
      return C[15] = dart.const({
        __proto__: common.TransitionType.prototype,
        [_name$]: "TransitionType.none",
        index: 12
      });
    },
    get C16() {
      return C[16] = dart.constList([C[3] || CT.C3, C[4] || CT.C4, C[5] || CT.C5, C[6] || CT.C6, C[7] || CT.C7, C[8] || CT.C8, C[9] || CT.C9, C[10] || CT.C10, C[11] || CT.C11, C[12] || CT.C12, C[13] || CT.C13, C[14] || CT.C14, C[15] || CT.C15], T.TransitionTypeL());
    },
    get C17() {
      return C[17] = dart.const({
        __proto__: common.RouteMatchType.prototype,
        [_name$]: "RouteMatchType.visual",
        index: 0
      });
    },
    get C18() {
      return C[18] = dart.const({
        __proto__: common.RouteMatchType.prototype,
        [_name$]: "RouteMatchType.nonVisual",
        index: 1
      });
    },
    get C19() {
      return C[19] = dart.const({
        __proto__: common.RouteMatchType.prototype,
        [_name$]: "RouteMatchType.noMatch",
        index: 2
      });
    },
    get C20() {
      return C[20] = dart.constList([C[17] || CT.C17, C[18] || CT.C18, C[19] || CT.C19], T.RouteMatchTypeL());
    }
  }, false);
  var C = Array(21).fill(void 0);
  var I = [
    "file:///E:/flutterSDK/flutter/.pub-cache/hosted/pub.flutter-io.cn/fluro-2.0.3/lib/src/common.dart",
    "package:fluro/src/common.dart"
  ];
  var _name$ = dart.privateName(common, "_name");
  common.HandlerType = class HandlerType extends core.Object {
    toString() {
      return this[_name$];
    }
  };
  (common.HandlerType.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[0], 14, 6, "index");
    if (_name == null) dart.nullFailed(I[0], 14, 6, "_name");
    this.index = index;
    this[_name$] = _name;
    ;
  }).prototype = common.HandlerType.prototype;
  dart.addTypeTests(common.HandlerType);
  dart.addTypeCaches(common.HandlerType);
  dart.setLibraryUri(common.HandlerType, I[1]);
  dart.setFieldSignature(common.HandlerType, () => ({
    __proto__: dart.getFields(common.HandlerType.__proto__),
    index: dart.finalFieldType(core.int),
    [_name$]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(common.HandlerType, ['toString']);
  common.HandlerType.route = C[0] || CT.C0;
  common.HandlerType.function = C[1] || CT.C1;
  common.HandlerType.values = C[2] || CT.C2;
  var type$ = dart.privateName(common, "Handler.type");
  var handlerFunc$ = dart.privateName(common, "Handler.handlerFunc");
  common.Handler = class Handler extends core.Object {
    get type() {
      return this[type$];
    }
    set type(value) {
      super.type = value;
    }
    get handlerFunc() {
      return this[handlerFunc$];
    }
    set handlerFunc(value) {
      super.handlerFunc = value;
    }
  };
  (common.Handler.new = function(opts) {
    let type = opts && 'type' in opts ? opts.type : C[0] || CT.C0;
    if (type == null) dart.nullFailed(I[0], 21, 17, "type");
    let handlerFunc = opts && 'handlerFunc' in opts ? opts.handlerFunc : null;
    if (handlerFunc == null) dart.nullFailed(I[0], 21, 57, "handlerFunc");
    this[type$] = type;
    this[handlerFunc$] = handlerFunc;
    ;
  }).prototype = common.Handler.prototype;
  dart.addTypeTests(common.Handler);
  dart.addTypeCaches(common.Handler);
  dart.setLibraryUri(common.Handler, I[1]);
  dart.setFieldSignature(common.Handler, () => ({
    __proto__: dart.getFields(common.Handler.__proto__),
    type: dart.finalFieldType(common.HandlerType),
    handlerFunc: dart.finalFieldType(dart.fnType(dart.nullable(framework.Widget), [dart.nullable(framework.BuildContext), core.Map$(core.String, core.List$(core.String))]))
  }));
  var route$ = dart.privateName(common, "AppRoute.route");
  var handler$ = dart.privateName(common, "AppRoute.handler");
  var transitionType$ = dart.privateName(common, "AppRoute.transitionType");
  var transitionDuration$ = dart.privateName(common, "AppRoute.transitionDuration");
  var transitionBuilder$ = dart.privateName(common, "AppRoute.transitionBuilder");
  common.AppRoute = class AppRoute extends core.Object {
    get route() {
      return this[route$];
    }
    set route(value) {
      this[route$] = value;
    }
    get handler() {
      return this[handler$];
    }
    set handler(value) {
      this[handler$] = value;
    }
    get transitionType() {
      return this[transitionType$];
    }
    set transitionType(value) {
      this[transitionType$] = value;
    }
    get transitionDuration() {
      return this[transitionDuration$];
    }
    set transitionDuration(value) {
      this[transitionDuration$] = value;
    }
    get transitionBuilder() {
      return this[transitionBuilder$];
    }
    set transitionBuilder(value) {
      this[transitionBuilder$] = value;
    }
  };
  (common.AppRoute.new = function(route, handler, opts) {
    if (route == null) dart.nullFailed(I[0], 43, 17, "route");
    let transitionType = opts && 'transitionType' in opts ? opts.transitionType : null;
    let transitionDuration = opts && 'transitionDuration' in opts ? opts.transitionDuration : null;
    let transitionBuilder = opts && 'transitionBuilder' in opts ? opts.transitionBuilder : null;
    this[route$] = route;
    this[handler$] = handler;
    this[transitionType$] = transitionType;
    this[transitionDuration$] = transitionDuration;
    this[transitionBuilder$] = transitionBuilder;
    ;
  }).prototype = common.AppRoute.prototype;
  dart.addTypeTests(common.AppRoute);
  dart.addTypeCaches(common.AppRoute);
  dart.setLibraryUri(common.AppRoute, I[1]);
  dart.setFieldSignature(common.AppRoute, () => ({
    __proto__: dart.getFields(common.AppRoute.__proto__),
    route: dart.fieldType(core.String),
    handler: dart.fieldType(dart.dynamic),
    transitionType: dart.fieldType(dart.nullable(common.TransitionType)),
    transitionDuration: dart.fieldType(dart.nullable(core.Duration)),
    transitionBuilder: dart.fieldType(dart.nullable(dart.fnType(framework.Widget, [framework.BuildContext, animation.Animation$(core.double), animation.Animation$(core.double), framework.Widget])))
  }));
  common.TransitionType = class TransitionType extends core.Object {
    toString() {
      return this[_name$];
    }
  };
  (common.TransitionType.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[0], 50, 6, "index");
    if (_name == null) dart.nullFailed(I[0], 50, 6, "_name");
    this.index = index;
    this[_name$] = _name;
    ;
  }).prototype = common.TransitionType.prototype;
  dart.addTypeTests(common.TransitionType);
  dart.addTypeCaches(common.TransitionType);
  dart.setLibraryUri(common.TransitionType, I[1]);
  dart.setFieldSignature(common.TransitionType, () => ({
    __proto__: dart.getFields(common.TransitionType.__proto__),
    index: dart.finalFieldType(core.int),
    [_name$]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(common.TransitionType, ['toString']);
  common.TransitionType.native = C[3] || CT.C3;
  common.TransitionType.nativeModal = C[4] || CT.C4;
  common.TransitionType.inFromLeft = C[5] || CT.C5;
  common.TransitionType.inFromTop = C[6] || CT.C6;
  common.TransitionType.inFromRight = C[7] || CT.C7;
  common.TransitionType.inFromBottom = C[8] || CT.C8;
  common.TransitionType.fadeIn = C[9] || CT.C9;
  common.TransitionType.custom = C[10] || CT.C10;
  common.TransitionType.material = C[11] || CT.C11;
  common.TransitionType.materialFullScreenDialog = C[12] || CT.C12;
  common.TransitionType.cupertino = C[13] || CT.C13;
  common.TransitionType.cupertinoFullScreenDialog = C[14] || CT.C14;
  common.TransitionType.none = C[15] || CT.C15;
  common.TransitionType.values = C[16] || CT.C16;
  common.RouteMatchType = class RouteMatchType extends core.Object {
    toString() {
      return this[_name$];
    }
  };
  (common.RouteMatchType.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[0], 67, 6, "index");
    if (_name == null) dart.nullFailed(I[0], 67, 6, "_name");
    this.index = index;
    this[_name$] = _name;
    ;
  }).prototype = common.RouteMatchType.prototype;
  dart.addTypeTests(common.RouteMatchType);
  dart.addTypeCaches(common.RouteMatchType);
  dart.setLibraryUri(common.RouteMatchType, I[1]);
  dart.setFieldSignature(common.RouteMatchType, () => ({
    __proto__: dart.getFields(common.RouteMatchType.__proto__),
    index: dart.finalFieldType(core.int),
    [_name$]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(common.RouteMatchType, ['toString']);
  common.RouteMatchType.visual = C[17] || CT.C17;
  common.RouteMatchType.nonVisual = C[18] || CT.C18;
  common.RouteMatchType.noMatch = C[19] || CT.C19;
  common.RouteMatchType.values = C[20] || CT.C20;
  var route$0 = dart.privateName(common, "RouteMatch.route");
  var matchType$ = dart.privateName(common, "RouteMatch.matchType");
  var errorMessage$ = dart.privateName(common, "RouteMatch.errorMessage");
  common.RouteMatch = class RouteMatch extends core.Object {
    get route() {
      return this[route$0];
    }
    set route(value) {
      super.route = value;
    }
    get matchType() {
      return this[matchType$];
    }
    set matchType(value) {
      super.matchType = value;
    }
    get errorMessage() {
      return this[errorMessage$];
    }
    set errorMessage(value) {
      super.errorMessage = value;
    }
  };
  (common.RouteMatch.new = function(opts) {
    let matchType = opts && 'matchType' in opts ? opts.matchType : C[19] || CT.C19;
    if (matchType == null) dart.nullFailed(I[0], 76, 13, "matchType");
    let route = opts && 'route' in opts ? opts.route : null;
    let errorMessage = opts && 'errorMessage' in opts ? opts.errorMessage : "Unable to match route. Please check the logs.";
    if (errorMessage == null) dart.nullFailed(I[0], 78, 12, "errorMessage");
    this[matchType$] = matchType;
    this[route$0] = route;
    this[errorMessage$] = errorMessage;
    ;
  }).prototype = common.RouteMatch.prototype;
  dart.addTypeTests(common.RouteMatch);
  dart.addTypeCaches(common.RouteMatch);
  dart.setLibraryUri(common.RouteMatch, I[1]);
  dart.setFieldSignature(common.RouteMatch, () => ({
    __proto__: dart.getFields(common.RouteMatch.__proto__),
    route: dart.finalFieldType(dart.nullable(navigator.Route)),
    matchType: dart.finalFieldType(common.RouteMatchType),
    errorMessage: dart.finalFieldType(core.String)
  }));
  var message$ = dart.privateName(common, "RouteNotFoundException.message");
  var path$ = dart.privateName(common, "RouteNotFoundException.path");
  common.RouteNotFoundException = class RouteNotFoundException extends core.Object {
    get message() {
      return this[message$];
    }
    set message(value) {
      super.message = value;
    }
    get path() {
      return this[path$];
    }
    set path(value) {
      super.path = value;
    }
    toString() {
      return "No registered route was found to handle '" + dart.str(this.path) + "'";
    }
  };
  (common.RouteNotFoundException.new = function(message, path) {
    if (message == null) dart.nullFailed(I[0], 88, 31, "message");
    if (path == null) dart.nullFailed(I[0], 88, 45, "path");
    this[message$] = message;
    this[path$] = path;
    ;
  }).prototype = common.RouteNotFoundException.prototype;
  dart.addTypeTests(common.RouteNotFoundException);
  dart.addTypeCaches(common.RouteNotFoundException);
  common.RouteNotFoundException[dart.implements] = () => [core.Exception];
  dart.setLibraryUri(common.RouteNotFoundException, I[1]);
  dart.setFieldSignature(common.RouteNotFoundException, () => ({
    __proto__: dart.getFields(common.RouteNotFoundException.__proto__),
    message: dart.finalFieldType(core.String),
    path: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(common.RouteNotFoundException, ['toString']);
  dart.trackLibraries("packages/fluro/src/common.dart", {
    "package:fluro/src/common.dart": common
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["common.dart"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAgBA;;;QAHK;;;;;EAGL;;;;;;;;;;;;;;;;IAKoB;;;;;;IACA;;;;;;;;QAFJ;;QAAwC;;IAAxC;IAAwC;;EAAa;;;;;;;;;;;;;;;IAiB5D;;;;;;IACC;;;;;;IACQ;;;;;;IACN;;;;;;IACe;;;;;;;kCACX,OAAY;QAAZ;QACJ;QAAqB;QAAyB;IAD1C;IAAY;IAChB;IAAqB;IAAyB;;EAAmB;;;;;;;;;;;;;;;IAoB7E;;;QAdK;;;;;EAcL;;;;;;;;;;;;;;;;;;;;;;;;;;;IAOA;;;QAJK;;;;;EAIL;;;;;;;;;;;;;;;;;;IAQwB;;;;;;IACD;;;;;;IACR;;;;;;;;QALH;;QACD;QACA;;IAFC;IACD;IACA;;EAAgE;;;;;;;;;;;;;IAQ5D;;;;;;IACA;;;;;;;AAKX,YAAO,AAAiD,wDAAN,aAAI;IACxD;;gDAL4B,SAAc;QAAd;QAAc;IAAd;IAAc;;EAAK","file":"../../../../../../../../../F:/packages/fluro/src/common.dart.lib.js"}');
  // Exports:
  return {
    src__common: common
  };
}));

//# sourceMappingURL=common.dart.lib.js.map
>>>>>>> 9fed4871f8cb2e24becf4331c7fe9d1d7a564371
