<<<<<<< HEAD
define(['dart_sdk', 'packages/flutter/src/painting/box_border.dart', 'packages/flutter/src/painting/border_radius.dart', 'packages/flutter/src/painting/box_shadow.dart', 'packages/flutter/src/painting/gradient.dart', 'packages/flutter/src/foundation/collections.dart', 'packages/flutter/src/foundation/debug.dart', 'packages/flutter/src/painting/colors.dart', 'packages/flutter/src/painting/decoration_image.dart', 'packages/flutter/src/painting/decoration.dart', 'packages/flutter/src/painting/_network_image_web.dart'], (function load__packages__flutter__src__painting__box_decoration_dart(dart_sdk, packages__flutter__src__painting__box_border$46dart, packages__flutter__src__painting__border_radius$46dart, packages__flutter__src__painting__box_shadow$46dart, packages__flutter__src__painting__gradient$46dart, packages__flutter__src__foundation__collections$46dart, packages__flutter__src__foundation__debug$46dart, packages__flutter__src__painting__colors$46dart, packages__flutter__src__painting__decoration_image$46dart, packages__flutter__src__painting__decoration$46dart, packages__flutter__src__painting___network_image_web$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const ui = dart_sdk.ui;
  const _internal = dart_sdk._internal;
  const math = dart_sdk.math;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const box_border = packages__flutter__src__painting__box_border$46dart.src__painting__box_border;
  const border_radius = packages__flutter__src__painting__border_radius$46dart.src__painting__border_radius;
  const box_shadow = packages__flutter__src__painting__box_shadow$46dart.src__painting__box_shadow;
  const gradient = packages__flutter__src__painting__gradient$46dart.src__painting__gradient;
  const collections = packages__flutter__src__foundation__collections$46dart.src__foundation__collections;
  const diagnostics = packages__flutter__src__foundation__debug$46dart.src__foundation__diagnostics;
  const colors = packages__flutter__src__painting__colors$46dart.src__painting__colors;
  const decoration_image = packages__flutter__src__painting__decoration_image$46dart.src__painting__decoration_image;
  const decoration = packages__flutter__src__painting__decoration$46dart.src__painting__decoration;
  const image_provider = packages__flutter__src__painting___network_image_web$46dart.src__painting__image_provider;
  var box_decoration = Object.create(dart.library);
  var $runtimeType = dartx.runtimeType;
  dart._checkModuleNullSafetyMode(false);
  var T = {
    BoxDecorationN: () => (T.BoxDecorationN = dart.constFn(dart.nullable(box_decoration.BoxDecoration)))(),
    DiagnosticsPropertyOfDecorationImage: () => (T.DiagnosticsPropertyOfDecorationImage = dart.constFn(diagnostics.DiagnosticsProperty$(decoration_image.DecorationImage)))(),
    DiagnosticsPropertyOfBoxBorder: () => (T.DiagnosticsPropertyOfBoxBorder = dart.constFn(diagnostics.DiagnosticsProperty$(box_border.BoxBorder)))(),
    DiagnosticsPropertyOfBorderRadiusGeometry: () => (T.DiagnosticsPropertyOfBorderRadiusGeometry = dart.constFn(diagnostics.DiagnosticsProperty$(border_radius.BorderRadiusGeometry)))(),
    IterablePropertyOfBoxShadow: () => (T.IterablePropertyOfBoxShadow = dart.constFn(diagnostics.IterableProperty$(box_shadow.BoxShadow)))(),
    DiagnosticsPropertyOfGradient: () => (T.DiagnosticsPropertyOfGradient = dart.constFn(diagnostics.DiagnosticsProperty$(gradient.Gradient)))(),
    EnumPropertyOfBoxShape: () => (T.EnumPropertyOfBoxShape = dart.constFn(diagnostics.EnumProperty$(box_border.BoxShape)))(),
    BorderRadiusN: () => (T.BorderRadiusN = dart.constFn(dart.nullable(border_radius.BorderRadius)))()
=======
define(['dart_sdk', 'packages/flutter/src/widgets/widget_span.dart', 'packages/flutter/src/animation/animation_controller.dart', 'packages/flutter/src/cupertino/text_theme.dart', 'packages/flutter/src/rendering/custom_paint.dart', 'packages/flutter/src/animation/listener_helpers.dart'], (function load__packages__flutter__src__cupertino__activity_indicator_dart(dart_sdk, packages__flutter__src__widgets__widget_span$46dart, packages__flutter__src__animation__animation_controller$46dart, packages__flutter__src__cupertino__text_theme$46dart, packages__flutter__src__rendering__custom_paint$46dart, packages__flutter__src__animation__listener_helpers$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const _internal = dart_sdk._internal;
  const ui = dart_sdk.ui;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const framework = packages__flutter__src__widgets__widget_span$46dart.src__widgets__framework;
  const basic = packages__flutter__src__widgets__widget_span$46dart.src__widgets__basic;
  const widget_inspector = packages__flutter__src__widgets__widget_span$46dart.src__widgets__widget_inspector;
  const ticker_provider = packages__flutter__src__widgets__widget_span$46dart.src__widgets__ticker_provider;
  const animation_controller = packages__flutter__src__animation__animation_controller$46dart.src__animation__animation_controller;
  const colors = packages__flutter__src__cupertino__text_theme$46dart.src__cupertino__colors;
  const custom_paint = packages__flutter__src__rendering__custom_paint$46dart.src__rendering__custom_paint;
  const animation = packages__flutter__src__animation__listener_helpers$46dart.src__animation__animation;
  var activity_indicator = Object.create(dart.library);
  var $length = dartx.length;
  var $floor = dartx.floor;
  var $modulo = dartx['%'];
  var $_get = dartx._get;
  dart._checkModuleNullSafetyMode(false);
  var T = {
    _LocationL: () => (T._LocationL = dart.constFn(dart.legacy(widget_inspector._Location)))(),
    intL: () => (T.intL = dart.constFn(dart.legacy(core.int)))()
>>>>>>> 9fed4871f8cb2e24becf4331c7fe9d1d7a564371
  };
  var T$Eval = Object.assign({
    _: () => T$Eval
  }, T);
  var S = {
    _: () => S
  };
  var S$Eval = Object.assign({
    _: () => S$Eval
  }, S);
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.const({
<<<<<<< HEAD
        __proto__: box_border.BoxShape.prototype,
        [_name]: "BoxShape.rectangle",
        index: 0
      });
    },
    get C1() {
      return C[1] = dart.const({
        __proto__: box_border.BoxShape.prototype,
        [_name]: "BoxShape.circle",
        index: 1
      });
    }
  }, false);
  var C = Array(2).fill(void 0);
  var I = [
    "file:///D:/flutterSDK/flutter/packages/flutter/lib/src/painting/box_decoration.dart",
    "package:flutter/src/painting/box_decoration.dart"
  ];
  var color$ = dart.privateName(box_decoration, "BoxDecoration.color");
  var image$ = dart.privateName(box_decoration, "BoxDecoration.image");
  var border$ = dart.privateName(box_decoration, "BoxDecoration.border");
  var borderRadius$ = dart.privateName(box_decoration, "BoxDecoration.borderRadius");
  var boxShadow$ = dart.privateName(box_decoration, "BoxDecoration.boxShadow");
  var gradient$ = dart.privateName(box_decoration, "BoxDecoration.gradient");
  var backgroundBlendMode$ = dart.privateName(box_decoration, "BoxDecoration.backgroundBlendMode");
  var shape$ = dart.privateName(box_decoration, "BoxDecoration.shape");
  var _name = dart.privateName(box_border, "_name");
  box_decoration.BoxDecoration = class BoxDecoration extends decoration.Decoration {
    get color() {
      return this[color$];
    }
    set color(value) {
      super.color = value;
    }
    get image() {
      return this[image$];
    }
    set image(value) {
      super.image = value;
    }
    get border() {
      return this[border$];
    }
    set border(value) {
      super.border = value;
    }
    get borderRadius() {
      return this[borderRadius$];
    }
    set borderRadius(value) {
      super.borderRadius = value;
    }
    get boxShadow() {
      return this[boxShadow$];
    }
    set boxShadow(value) {
      super.boxShadow = value;
    }
    get gradient() {
      return this[gradient$];
    }
    set gradient(value) {
      super.gradient = value;
    }
    get backgroundBlendMode() {
      return this[backgroundBlendMode$];
    }
    set backgroundBlendMode(value) {
      super.backgroundBlendMode = value;
    }
    get shape() {
      return this[shape$];
    }
    set shape(value) {
      super.shape = value;
    }
    copyWith(opts) {
      let t0, t0$, t0$0, t0$1, t0$2, t0$3, t0$4, t0$5;
      let color = opts && 'color' in opts ? opts.color : null;
      let image = opts && 'image' in opts ? opts.image : null;
      let border = opts && 'border' in opts ? opts.border : null;
      let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
      let boxShadow = opts && 'boxShadow' in opts ? opts.boxShadow : null;
      let gradient = opts && 'gradient' in opts ? opts.gradient : null;
      let backgroundBlendMode = opts && 'backgroundBlendMode' in opts ? opts.backgroundBlendMode : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      return new box_decoration.BoxDecoration.new({color: (t0 = color, t0 == null ? this.color : t0), image: (t0$ = image, t0$ == null ? this.image : t0$), border: (t0$0 = border, t0$0 == null ? this.border : t0$0), borderRadius: (t0$1 = borderRadius, t0$1 == null ? this.borderRadius : t0$1), boxShadow: (t0$2 = boxShadow, t0$2 == null ? this.boxShadow : t0$2), gradient: (t0$3 = gradient, t0$3 == null ? this.gradient : t0$3), backgroundBlendMode: (t0$4 = backgroundBlendMode, t0$4 == null ? this.backgroundBlendMode : t0$4), shape: (t0$5 = shape, t0$5 == null ? this.shape : t0$5)});
    }
    debugAssertIsValid() {
      if (!(this.shape != box_border.BoxShape.circle || this.borderRadius == null)) dart.assertFailed(null, I[0], 131, 12, "shape != BoxShape.circle ||\r\n          borderRadius == null");
      return super.debugAssertIsValid();
    }
    get padding() {
      let t0;
      t0 = this.border;
      return t0 == null ? null : t0.dimensions;
    }
    getClipPath(rect, textDirection) {
      let t0, t0$, t0$0;
      if (rect == null) dart.nullFailed(I[0], 218, 25, "rect");
      if (textDirection == null) dart.nullFailed(I[0], 218, 45, "textDirection");
      switch (this.shape) {
        case C[1] || CT.C1:
        {
          let center = rect.center;
          let radius = dart.notNull(rect.shortestSide) / 2.0;
          let square = new ui.Rect.fromCircle({center: center, radius: radius});
          t0 = ui.Path.new();
          return (() => {
            t0.addOval(square);
            return t0;
          })();
        }
        case C[0] || CT.C0:
        {
          if (this.borderRadius != null) {
            t0$ = ui.Path.new();
            return (() => {
              t0$.addRRect(dart.nullCheck(this.borderRadius).resolve(textDirection).toRRect(rect));
              return t0$;
            })();
          }
          t0$0 = ui.Path.new();
          return (() => {
            t0$0.addRect(rect);
            return t0$0;
          })();
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    scale(factor) {
      let t0;
      if (factor == null) dart.nullFailed(I[0], 233, 30, "factor");
      return new box_decoration.BoxDecoration.new({color: ui.Color.lerp(null, this.color, factor), image: this.image, border: box_border.BoxBorder.lerp(null, this.border, factor), borderRadius: border_radius.BorderRadiusGeometry.lerp(null, this.borderRadius, factor), boxShadow: box_shadow.BoxShadow.lerpList(null, this.boxShadow, factor), gradient: (t0 = this.gradient, t0 == null ? null : t0.scale(factor)), shape: this.shape});
    }
    get isComplex() {
      return this.boxShadow != null;
    }
    lerpFrom(a, t) {
      if (t == null) dart.nullFailed(I[0], 249, 49, "t");
      if (a == null) return this.scale(t);
      if (box_decoration.BoxDecoration.is(a)) return box_decoration.BoxDecoration.lerp(a, this, t);
      return T.BoxDecorationN().as(super.lerpFrom(a, t));
    }
    lerpTo(b, t) {
      if (t == null) dart.nullFailed(I[0], 258, 47, "t");
      if (b == null) return this.scale(1.0 - dart.notNull(t));
      if (box_decoration.BoxDecoration.is(b)) return box_decoration.BoxDecoration.lerp(this, b, t);
      return T.BoxDecorationN().as(super.lerpTo(b, t));
    }
    static lerp(a, b, t) {
      if (t == null) dart.nullFailed(I[0], 289, 73, "t");
      if (!(t != null)) dart.assertFailed(null, I[0], 290, 12, "t != null");
      if (a == null && b == null) return null;
      if (a == null) return dart.nullCheck(b).scale(t);
      if (b == null) return a.scale(1.0 - dart.notNull(t));
      if (t === 0.0) return a;
      if (t === 1.0) return b;
      return new box_decoration.BoxDecoration.new({color: ui.Color.lerp(a.color, b.color, t), image: dart.notNull(t) < 0.5 ? a.image : b.image, border: box_border.BoxBorder.lerp(a.border, b.border, t), borderRadius: border_radius.BorderRadiusGeometry.lerp(a.borderRadius, b.borderRadius, t), boxShadow: box_shadow.BoxShadow.lerpList(a.boxShadow, b.boxShadow, t), gradient: gradient.Gradient.lerp(a.gradient, b.gradient, t), shape: dart.notNull(t) < 0.5 ? a.shape : b.shape});
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this[$runtimeType])) return false;
      return box_decoration.BoxDecoration.is(other) && dart.equals(other.color, this.color) && dart.equals(other.image, this.image) && dart.equals(other.border, this.border) && dart.equals(other.borderRadius, this.borderRadius) && dart.test(collections.listEquals(box_shadow.BoxShadow, other.boxShadow, this.boxShadow)) && dart.equals(other.gradient, this.gradient) && other.shape == this.shape;
    }
    get hashCode() {
      return ui.hashValues(this.color, this.image, this.border, this.borderRadius, ui.hashList(this.boxShadow), this.gradient, this.shape);
    }
    debugFillProperties(properties) {
      let t0;
      if (properties == null) dart.nullFailed(I[0], 342, 56, "properties");
      super.debugFillProperties(properties);
      t0 = properties;
      (() => {
        t0.defaultDiagnosticsTreeStyle = diagnostics.DiagnosticsTreeStyle.whitespace;
        t0.emptyBodyDescription = "<no decorations specified>";
        return t0;
      })();
      properties.add(new colors.ColorProperty.new("color", this.color, {defaultValue: null}));
      properties.add(new (T.DiagnosticsPropertyOfDecorationImage()).new("image", this.image, {defaultValue: null}));
      properties.add(new (T.DiagnosticsPropertyOfBoxBorder()).new("border", this.border, {defaultValue: null}));
      properties.add(new (T.DiagnosticsPropertyOfBorderRadiusGeometry()).new("borderRadius", this.borderRadius, {defaultValue: null}));
      properties.add(new (T.IterablePropertyOfBoxShadow()).new("boxShadow", this.boxShadow, {defaultValue: null, style: diagnostics.DiagnosticsTreeStyle.whitespace}));
      properties.add(new (T.DiagnosticsPropertyOfGradient()).new("gradient", this.gradient, {defaultValue: null}));
      properties.add(new (T.EnumPropertyOfBoxShape()).new("shape", this.shape, {defaultValue: box_border.BoxShape.rectangle}));
    }
    hitTest(size, position, opts) {
      if (size == null) dart.nullFailed(I[0], 358, 21, "size");
      if (position == null) dart.nullFailed(I[0], 358, 34, "position");
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      if (!(this.shape != null)) dart.assertFailed(null, I[0], 359, 12, "shape != null");
      if (!dart.test(ui.Offset.zero['&'](size).contains(position))) dart.assertFailed(null, I[0], 360, 12, "(Offset.zero & size).contains(position)");
      switch (this.shape) {
        case C[0] || CT.C0:
        {
          if (this.borderRadius != null) {
            let bounds = dart.nullCheck(this.borderRadius).resolve(textDirection).toRRect(ui.Offset.zero['&'](size));
            return bounds.contains(position);
          }
          return true;
        }
        case C[1] || CT.C1:
        {
          let center = size.center(ui.Offset.zero);
          let distance = position['-'](center).distance;
          return dart.notNull(distance) <= math.min(core.double, size.width, size.height) / 2.0;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    createBoxPainter(onChanged = null) {
      if (!(onChanged != null || this.image == null)) dart.assertFailed(null, I[0], 378, 12, "onChanged != null || image == null");
      return new box_decoration._BoxDecorationPainter.new(this, onChanged);
    }
  };
  (box_decoration.BoxDecoration.new = function(opts) {
    let color = opts && 'color' in opts ? opts.color : null;
    let image = opts && 'image' in opts ? opts.image : null;
    let border = opts && 'border' in opts ? opts.border : null;
    let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
    let boxShadow = opts && 'boxShadow' in opts ? opts.boxShadow : null;
    let gradient = opts && 'gradient' in opts ? opts.gradient : null;
    let backgroundBlendMode = opts && 'backgroundBlendMode' in opts ? opts.backgroundBlendMode : null;
    let shape = opts && 'shape' in opts ? opts.shape : C[0] || CT.C0;
    if (shape == null) dart.nullFailed(I[0], 97, 10, "shape");
    this[color$] = color;
    this[image$] = image;
    this[border$] = border;
    this[borderRadius$] = borderRadius;
    this[boxShadow$] = boxShadow;
    this[gradient$] = gradient;
    this[backgroundBlendMode$] = backgroundBlendMode;
    this[shape$] = shape;
    if (!(shape != null)) dart.assertFailed(null, I[0], 98, 15, "shape != null");
    if (!(backgroundBlendMode == null || color != null || gradient != null)) dart.assertFailed("backgroundBlendMode applies to BoxDecoration's background color or " + "gradient, but no color or gradient was provided.", I[0], 100, 10, "backgroundBlendMode == null || color != null || gradient != null");
    box_decoration.BoxDecoration.__proto__.new.call(this);
    ;
  }).prototype = box_decoration.BoxDecoration.prototype;
  dart.addTypeTests(box_decoration.BoxDecoration);
  dart.addTypeCaches(box_decoration.BoxDecoration);
  dart.setMethodSignature(box_decoration.BoxDecoration, () => ({
    __proto__: dart.getMethods(box_decoration.BoxDecoration.__proto__),
    copyWith: dart.fnType(box_decoration.BoxDecoration, [], {backgroundBlendMode: dart.nullable(ui.BlendMode), border: dart.nullable(box_border.BoxBorder), borderRadius: dart.nullable(border_radius.BorderRadiusGeometry), boxShadow: dart.nullable(core.List$(box_shadow.BoxShadow)), color: dart.nullable(ui.Color), gradient: dart.nullable(gradient.Gradient), image: dart.nullable(decoration_image.DecorationImage), shape: dart.nullable(box_border.BoxShape)}, {}),
    scale: dart.fnType(box_decoration.BoxDecoration, [core.double]),
    lerpFrom: dart.fnType(dart.nullable(box_decoration.BoxDecoration), [dart.nullable(decoration.Decoration), core.double]),
    lerpTo: dart.fnType(dart.nullable(box_decoration.BoxDecoration), [dart.nullable(decoration.Decoration), core.double]),
    createBoxPainter: dart.fnType(box_decoration._BoxDecorationPainter, [], [dart.nullable(dart.fnType(dart.void, []))])
  }));
  dart.setLibraryUri(box_decoration.BoxDecoration, I[1]);
  dart.setFieldSignature(box_decoration.BoxDecoration, () => ({
    __proto__: dart.getFields(box_decoration.BoxDecoration.__proto__),
    color: dart.finalFieldType(dart.nullable(ui.Color)),
    image: dart.finalFieldType(dart.nullable(decoration_image.DecorationImage)),
    border: dart.finalFieldType(dart.nullable(box_border.BoxBorder)),
    borderRadius: dart.finalFieldType(dart.nullable(border_radius.BorderRadiusGeometry)),
    boxShadow: dart.finalFieldType(dart.nullable(core.List$(box_shadow.BoxShadow))),
    gradient: dart.finalFieldType(dart.nullable(gradient.Gradient)),
    backgroundBlendMode: dart.finalFieldType(dart.nullable(ui.BlendMode)),
    shape: dart.finalFieldType(box_border.BoxShape)
  }));
  dart.defineExtensionMethods(box_decoration.BoxDecoration, ['_equals']);
  dart.defineExtensionAccessors(box_decoration.BoxDecoration, ['hashCode']);
  var _cachedBackgroundPaint = dart.privateName(box_decoration, "_cachedBackgroundPaint");
  var _rectForCachedBackgroundPaint = dart.privateName(box_decoration, "_rectForCachedBackgroundPaint");
  var _imagePainter = dart.privateName(box_decoration, "_imagePainter");
  var _decoration$ = dart.privateName(box_decoration, "_decoration");
  var _getBackgroundPaint = dart.privateName(box_decoration, "_getBackgroundPaint");
  var _paintBox = dart.privateName(box_decoration, "_paintBox");
  var _paintShadows = dart.privateName(box_decoration, "_paintShadows");
  var _paintBackgroundColor = dart.privateName(box_decoration, "_paintBackgroundColor");
  var _paintBackgroundImage = dart.privateName(box_decoration, "_paintBackgroundImage");
  box_decoration._BoxDecorationPainter = class _BoxDecorationPainter extends decoration.BoxPainter {
    [_getBackgroundPaint](rect, textDirection) {
      if (rect == null) dart.nullFailed(I[0], 393, 34, "rect");
      if (!(rect != null)) dart.assertFailed(null, I[0], 394, 12, "rect != null");
      if (!(this[_decoration$].gradient != null || this[_rectForCachedBackgroundPaint] == null)) dart.assertFailed(null, I[0], 395, 12, "_decoration.gradient != null || _rectForCachedBackgroundPaint == null");
      if (this[_cachedBackgroundPaint] == null || this[_decoration$].gradient != null && !dart.equals(this[_rectForCachedBackgroundPaint], rect)) {
        let paint = ui.Paint.new();
        if (this[_decoration$].backgroundBlendMode != null) paint.blendMode = dart.nullCheck(this[_decoration$].backgroundBlendMode);
        if (this[_decoration$].color != null) paint.color = dart.nullCheck(this[_decoration$].color);
        if (this[_decoration$].gradient != null) {
          paint.shader = dart.nullCheck(this[_decoration$].gradient).createShader(rect, {textDirection: textDirection});
          this[_rectForCachedBackgroundPaint] = rect;
        }
        this[_cachedBackgroundPaint] = paint;
      }
      return dart.nullCheck(this[_cachedBackgroundPaint]);
    }
    [_paintBox](canvas, rect, paint, textDirection) {
      if (canvas == null) dart.nullFailed(I[0], 414, 25, "canvas");
      if (rect == null) dart.nullFailed(I[0], 414, 38, "rect");
      if (paint == null) dart.nullFailed(I[0], 414, 50, "paint");
      switch (this[_decoration$].shape) {
        case C[1] || CT.C1:
        {
          if (!(this[_decoration$].borderRadius == null)) dart.assertFailed(null, I[0], 417, 16, "_decoration.borderRadius == null");
          let center = rect.center;
          let radius = dart.notNull(rect.shortestSide) / 2.0;
          canvas.drawCircle(center, radius, paint);
          break;
        }
        case C[0] || CT.C0:
        {
          if (this[_decoration$].borderRadius == null) {
            canvas.drawRect(rect, paint);
          } else {
            canvas.drawRRect(dart.nullCheck(this[_decoration$].borderRadius).resolve(textDirection).toRRect(rect), paint);
          }
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    [_paintShadows](canvas, rect, textDirection) {
      if (canvas == null) dart.nullFailed(I[0], 432, 29, "canvas");
      if (rect == null) dart.nullFailed(I[0], 432, 42, "rect");
      if (this[_decoration$].boxShadow == null) return;
      for (let boxShadow of dart.nullCheck(this[_decoration$].boxShadow)) {
        let paint = boxShadow.toPaint();
        let bounds = rect.shift(boxShadow.offset).inflate(boxShadow.spreadRadius);
        this[_paintBox](canvas, bounds, paint, textDirection);
      }
    }
    [_paintBackgroundColor](canvas, rect, textDirection) {
      if (canvas == null) dart.nullFailed(I[0], 442, 37, "canvas");
      if (rect == null) dart.nullFailed(I[0], 442, 50, "rect");
      if (this[_decoration$].color != null || this[_decoration$].gradient != null) this[_paintBox](canvas, rect, this[_getBackgroundPaint](rect, textDirection), textDirection);
    }
    [_paintBackgroundImage](canvas, rect, configuration) {
      let t0, t0$;
      if (canvas == null) dart.nullFailed(I[0], 448, 37, "canvas");
      if (rect == null) dart.nullFailed(I[0], 448, 50, "rect");
      if (configuration == null) dart.nullFailed(I[0], 448, 75, "configuration");
      if (this[_decoration$].image == null) return;
      this[_imagePainter] == null ? this[_imagePainter] = dart.nullCheck(this[_decoration$].image).createPainter(dart.nullCheck(this.onChanged)) : null;
      let clipPath = null;
      switch (this[_decoration$].shape) {
        case C[1] || CT.C1:
        {
          if (!(this[_decoration$].borderRadius == null)) dart.assertFailed(null, I[0], 455, 16, "_decoration.borderRadius == null");
          let center = rect.center;
          let radius = dart.notNull(rect.shortestSide) / 2.0;
          let square = new ui.Rect.fromCircle({center: center, radius: radius});
          clipPath = (t0 = ui.Path.new(), (() => {
            t0.addOval(square);
            return t0;
          })());
          break;
        }
        case C[0] || CT.C0:
        {
          if (this[_decoration$].borderRadius != null) clipPath = (t0$ = ui.Path.new(), (() => {
            t0$.addRRect(dart.nullCheck(this[_decoration$].borderRadius).resolve(configuration.textDirection).toRRect(rect));
            return t0$;
          })());
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      dart.nullCheck(this[_imagePainter]).paint(canvas, rect, clipPath, configuration);
    }
    dispose() {
      let t0;
      t0 = this[_imagePainter];
      t0 == null ? null : t0.dispose();
      super.dispose();
    }
    paint(canvas, offset, configuration) {
      let t0;
      if (canvas == null) dart.nullFailed(I[0], 477, 21, "canvas");
      if (offset == null) dart.nullFailed(I[0], 477, 36, "offset");
      if (configuration == null) dart.nullFailed(I[0], 477, 63, "configuration");
      if (!(configuration != null)) dart.assertFailed(null, I[0], 478, 12, "configuration != null");
      if (!(configuration.size != null)) dart.assertFailed(null, I[0], 479, 12, "configuration.size != null");
      let rect = offset['&'](dart.nullCheck(configuration.size));
      let textDirection = configuration.textDirection;
      this[_paintShadows](canvas, rect, textDirection);
      this[_paintBackgroundColor](canvas, rect, textDirection);
      this[_paintBackgroundImage](canvas, rect, configuration);
      t0 = this[_decoration$].border;
      t0 == null ? null : t0.paint(canvas, rect, {shape: this[_decoration$].shape, borderRadius: T.BorderRadiusN().as(this[_decoration$].borderRadius), textDirection: configuration.textDirection});
    }
    toString() {
      return "BoxPainter for " + dart.str(this[_decoration$]);
    }
  };
  (box_decoration._BoxDecorationPainter.new = function(_decoration, onChanged) {
    if (_decoration == null) dart.nullFailed(I[0], 385, 30, "_decoration");
    this[_cachedBackgroundPaint] = null;
    this[_rectForCachedBackgroundPaint] = null;
    this[_imagePainter] = null;
    this[_decoration$] = _decoration;
    if (!(_decoration != null)) dart.assertFailed(null, I[0], 386, 14, "_decoration != null");
    box_decoration._BoxDecorationPainter.__proto__.new.call(this, onChanged);
    ;
  }).prototype = box_decoration._BoxDecorationPainter.prototype;
  dart.addTypeTests(box_decoration._BoxDecorationPainter);
  dart.addTypeCaches(box_decoration._BoxDecorationPainter);
  dart.setMethodSignature(box_decoration._BoxDecorationPainter, () => ({
    __proto__: dart.getMethods(box_decoration._BoxDecorationPainter.__proto__),
    [_getBackgroundPaint]: dart.fnType(ui.Paint, [ui.Rect, dart.nullable(ui.TextDirection)]),
    [_paintBox]: dart.fnType(dart.void, [ui.Canvas, ui.Rect, ui.Paint, dart.nullable(ui.TextDirection)]),
    [_paintShadows]: dart.fnType(dart.void, [ui.Canvas, ui.Rect, dart.nullable(ui.TextDirection)]),
    [_paintBackgroundColor]: dart.fnType(dart.void, [ui.Canvas, ui.Rect, dart.nullable(ui.TextDirection)]),
    [_paintBackgroundImage]: dart.fnType(dart.void, [ui.Canvas, ui.Rect, image_provider.ImageConfiguration]),
    paint: dart.fnType(dart.void, [ui.Canvas, ui.Offset, image_provider.ImageConfiguration])
  }));
  dart.setLibraryUri(box_decoration._BoxDecorationPainter, I[1]);
  dart.setFieldSignature(box_decoration._BoxDecorationPainter, () => ({
    __proto__: dart.getFields(box_decoration._BoxDecorationPainter.__proto__),
    [_decoration$]: dart.finalFieldType(box_decoration.BoxDecoration),
    [_cachedBackgroundPaint]: dart.fieldType(dart.nullable(ui.Paint)),
    [_rectForCachedBackgroundPaint]: dart.fieldType(dart.nullable(ui.Rect)),
    [_imagePainter]: dart.fieldType(dart.nullable(decoration_image.DecorationImagePainter))
  }));
  dart.defineExtensionMethods(box_decoration._BoxDecorationPainter, ['toString']);
  dart.trackLibraries("packages/flutter/src/painting/box_decoration.dart", {
    "package:flutter/src/painting/box_decoration.dart": box_decoration
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["box_decoration.dart"],"names":[],"mappings":"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","file":"../../../../../../../packages/flutter/src/painting/box_decoration.dart.lib.js"}');
  // Exports:
  return {
    src__painting__box_decoration: box_decoration
  };
}));

//# sourceMappingURL=box_decoration.dart.lib.js.map
=======
        __proto__: core.Duration.prototype,
        [Duration__duration]: 1000000
      });
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "painter",
        [_Location_column]: 9,
        [_Location_line]: 119,
        [_Location_file]: null
      });
    },
    get C2() {
      return C[2] = dart.constList([C[3] || CT.C3], T._LocationL());
    },
    get C1() {
      return C[1] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[2] || CT.C2,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 118,
        [_Location_file]: "file:///E:/flutterSDK/flutter/packages/flutter/lib/src/cupertino/activity_indicator.dart"
      });
    },
    get C6() {
      return C[6] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 7,
        [_Location_line]: 116,
        [_Location_file]: null
      });
    },
    get C7() {
      return C[7] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 7,
        [_Location_line]: 117,
        [_Location_file]: null
      });
    },
    get C8() {
      return C[8] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 118,
        [_Location_file]: null
      });
    },
    get C5() {
      return C[5] = dart.constList([C[6] || CT.C6, C[7] || CT.C7, C[8] || CT.C8], T._LocationL());
    },
    get C4() {
      return C[4] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[5] || CT.C5,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 115,
        [_Location_file]: "file:///E:/flutterSDK/flutter/packages/flutter/lib/src/cupertino/activity_indicator.dart"
      });
    },
    get C10() {
      return C[10] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4293651445.0
      });
    },
    get C11() {
      return C[11] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4282137668.0
      });
    },
    get C9() {
      return C[9] = dart.const({
        __proto__: colors.CupertinoDynamicColor.prototype,
        [Color_value]: 0,
        [CupertinoDynamicColor_darkHighContrastElevatedColor]: C[10] || CT.C10,
        [CupertinoDynamicColor_highContrastElevatedColor]: C[11] || CT.C11,
        [CupertinoDynamicColor_darkElevatedColor]: C[10] || CT.C10,
        [CupertinoDynamicColor_elevatedColor]: C[11] || CT.C11,
        [CupertinoDynamicColor_darkHighContrastColor]: C[10] || CT.C10,
        [CupertinoDynamicColor_highContrastColor]: C[11] || CT.C11,
        [CupertinoDynamicColor_darkColor]: C[10] || CT.C10,
        [CupertinoDynamicColor_color]: C[11] || CT.C11,
        [CupertinoDynamicColor__debugResolveContext]: null,
        [CupertinoDynamicColor__debugLabel]: null,
        [CupertinoDynamicColor__effectiveColor]: C[11] || CT.C11
      });
    },
    get C12() {
      return C[12] = dart.constList([47, 47, 47, 47, 72, 97, 122, 147], T.intL());
    }
  }, false);
  var C = Array(13).fill(void 0);
  var I = [
    "file:///E:/flutterSDK/flutter/packages/flutter/lib/src/cupertino/activity_indicator.dart",
    "package:flutter/src/cupertino/activity_indicator.dart"
  ];
  var animating$ = dart.privateName(activity_indicator, "CupertinoActivityIndicator.animating");
  var radius$ = dart.privateName(activity_indicator, "CupertinoActivityIndicator.radius");
  var progress$ = dart.privateName(activity_indicator, "CupertinoActivityIndicator.progress");
  activity_indicator.CupertinoActivityIndicator = class CupertinoActivityIndicator extends framework.StatefulWidget {
    get animating() {
      return this[animating$];
    }
    set animating(value) {
      super.animating = value;
    }
    get radius() {
      return this[radius$];
    }
    set radius(value) {
      super.radius = value;
    }
    get progress() {
      return this[progress$];
    }
    set progress(value) {
      super.progress = value;
    }
    createState() {
      return new activity_indicator._CupertinoActivityIndicatorState.new();
    }
  };
  (activity_indicator.CupertinoActivityIndicator.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let animating = opts && 'animating' in opts ? opts.animating : true;
    if (animating == null) dart.nullFailed(I[0], 30, 10, "animating");
    let radius = opts && 'radius' in opts ? opts.radius : 10;
    if (radius == null) dart.nullFailed(I[0], 31, 10, "radius");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[animating$] = animating;
    this[radius$] = radius;
    if (!(animating != null)) dart.assertFailed(null, I[0], 32, 16, "animating != null");
    if (!(radius != null)) dart.assertFailed(null, I[0], 33, 16, "radius != null");
    if (!(dart.notNull(radius) > 0.0)) dart.assertFailed(null, I[0], 34, 16, "radius > 0.0");
    this[progress$] = 1.0;
    activity_indicator.CupertinoActivityIndicator.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = activity_indicator.CupertinoActivityIndicator.prototype;
  (activity_indicator.CupertinoActivityIndicator.partiallyRevealed = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let radius = opts && 'radius' in opts ? opts.radius : 10;
    if (radius == null) dart.nullFailed(I[0], 46, 10, "radius");
    let progress = opts && 'progress' in opts ? opts.progress : 1;
    if (progress == null) dart.nullFailed(I[0], 47, 10, "progress");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[radius$] = radius;
    this[progress$] = progress;
    if (!(radius != null)) dart.assertFailed(null, I[0], 48, 16, "radius != null");
    if (!(dart.notNull(radius) > 0.0)) dart.assertFailed(null, I[0], 49, 16, "radius > 0.0");
    if (!(progress != null)) dart.assertFailed(null, I[0], 50, 16, "progress != null");
    if (!(dart.notNull(progress) >= 0.0)) dart.assertFailed(null, I[0], 51, 16, "progress >= 0.0");
    if (!(dart.notNull(progress) <= 1.0)) dart.assertFailed(null, I[0], 52, 16, "progress <= 1.0");
    this[animating$] = false;
    activity_indicator.CupertinoActivityIndicator.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = activity_indicator.CupertinoActivityIndicator.prototype;
  dart.addTypeTests(activity_indicator.CupertinoActivityIndicator);
  dart.addTypeCaches(activity_indicator.CupertinoActivityIndicator);
  dart.setMethodSignature(activity_indicator.CupertinoActivityIndicator, () => ({
    __proto__: dart.getMethods(activity_indicator.CupertinoActivityIndicator.__proto__),
    createState: dart.fnType(activity_indicator._CupertinoActivityIndicatorState, [])
  }));
  dart.setLibraryUri(activity_indicator.CupertinoActivityIndicator, I[1]);
  dart.setFieldSignature(activity_indicator.CupertinoActivityIndicator, () => ({
    __proto__: dart.getFields(activity_indicator.CupertinoActivityIndicator.__proto__),
    animating: dart.finalFieldType(core.bool),
    radius: dart.finalFieldType(core.double),
    progress: dart.finalFieldType(core.double)
  }));
  var ___CupertinoActivityIndicatorState__controller = dart.privateName(activity_indicator, "_#_CupertinoActivityIndicatorState#_controller");
  var ___CupertinoActivityIndicatorState__controller_isSet = dart.privateName(activity_indicator, "_#_CupertinoActivityIndicatorState#_controller#isSet");
  var _controller = dart.privateName(activity_indicator, "_controller");
  var Duration__duration = dart.privateName(core, "Duration._duration");
  var _Location_parameterLocations = dart.privateName(widget_inspector, "_Location.parameterLocations");
  var _Location_name = dart.privateName(widget_inspector, "_Location.name");
  var _Location_column = dart.privateName(widget_inspector, "_Location.column");
  var _Location_line = dart.privateName(widget_inspector, "_Location.line");
  var _Location_file = dart.privateName(widget_inspector, "_Location.file");
  const State_SingleTickerProviderStateMixin$36 = class State_SingleTickerProviderStateMixin extends framework.State$(activity_indicator.CupertinoActivityIndicator) {};
  (State_SingleTickerProviderStateMixin$36.new = function() {
    ticker_provider.SingleTickerProviderStateMixin$(activity_indicator.CupertinoActivityIndicator)[dart.mixinNew].call(this);
    State_SingleTickerProviderStateMixin$36.__proto__.new.call(this);
  }).prototype = State_SingleTickerProviderStateMixin$36.prototype;
  dart.applyMixin(State_SingleTickerProviderStateMixin$36, ticker_provider.SingleTickerProviderStateMixin$(activity_indicator.CupertinoActivityIndicator));
  activity_indicator._CupertinoActivityIndicatorState = class _CupertinoActivityIndicatorState extends State_SingleTickerProviderStateMixin$36 {
    get [_controller]() {
      let t0;
      return dart.test(this[___CupertinoActivityIndicatorState__controller_isSet]) ? (t0 = this[___CupertinoActivityIndicatorState__controller], t0) : dart.throw(new _internal.LateError.fieldNI("_controller"));
    }
    set [_controller](t0) {
      if (t0 == null) dart.nullFailed(I[0], 81, 28, "null");
      this[___CupertinoActivityIndicatorState__controller_isSet] = true;
      this[___CupertinoActivityIndicatorState__controller] = t0;
    }
    initState() {
      super.initState();
      this[_controller] = new animation_controller.AnimationController.new({duration: C[0] || CT.C0, vsync: this});
      if (dart.test(this.widget.animating)) {
        this[_controller].repeat();
      }
    }
    didUpdateWidget(oldWidget) {
      activity_indicator.CupertinoActivityIndicator.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[0], 97, 51, "oldWidget");
      super.didUpdateWidget(oldWidget);
      if (this.widget.animating != oldWidget.animating) {
        if (dart.test(this.widget.animating))
          this[_controller].repeat();
        else
          this[_controller].stop();
      }
    }
    dispose() {
      this[_controller].dispose();
      super.dispose();
    }
    build(context) {
      if (context == null) dart.nullFailed(I[0], 114, 29, "context");
      return new basic.SizedBox.new({height: dart.notNull(this.widget.radius) * 2, width: dart.notNull(this.widget.radius) * 2, child: new basic.CustomPaint.new({painter: new activity_indicator._CupertinoActivityIndicatorPainter.new({position: this[_controller], activeColor: colors.CupertinoDynamicColor.resolve(activity_indicator._kActiveTickColor, context), radius: this.widget.radius, progress: this.widget.progress}), $creationLocationd_0dea112b090073317d4: C[1] || CT.C1}), $creationLocationd_0dea112b090073317d4: C[4] || CT.C4});
    }
  };
  (activity_indicator._CupertinoActivityIndicatorState.new = function() {
    this[___CupertinoActivityIndicatorState__controller] = null;
    this[___CupertinoActivityIndicatorState__controller_isSet] = false;
    activity_indicator._CupertinoActivityIndicatorState.__proto__.new.call(this);
    ;
  }).prototype = activity_indicator._CupertinoActivityIndicatorState.prototype;
  dart.addTypeTests(activity_indicator._CupertinoActivityIndicatorState);
  dart.addTypeCaches(activity_indicator._CupertinoActivityIndicatorState);
  dart.setMethodSignature(activity_indicator._CupertinoActivityIndicatorState, () => ({
    __proto__: dart.getMethods(activity_indicator._CupertinoActivityIndicatorState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(activity_indicator._CupertinoActivityIndicatorState, () => ({
    __proto__: dart.getGetters(activity_indicator._CupertinoActivityIndicatorState.__proto__),
    [_controller]: animation_controller.AnimationController
  }));
  dart.setSetterSignature(activity_indicator._CupertinoActivityIndicatorState, () => ({
    __proto__: dart.getSetters(activity_indicator._CupertinoActivityIndicatorState.__proto__),
    [_controller]: animation_controller.AnimationController
  }));
  dart.setLibraryUri(activity_indicator._CupertinoActivityIndicatorState, I[1]);
  dart.setFieldSignature(activity_indicator._CupertinoActivityIndicatorState, () => ({
    __proto__: dart.getFields(activity_indicator._CupertinoActivityIndicatorState.__proto__),
    [___CupertinoActivityIndicatorState__controller]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [___CupertinoActivityIndicatorState__controller_isSet]: dart.fieldType(core.bool)
  }));
  activity_indicator._CupertinoActivityIndicatorPainter = class _CupertinoActivityIndicatorPainter extends custom_paint.CustomPainter {
    paint(canvas, size) {
      if (canvas == null) dart.nullFailed(I[0], 173, 21, "canvas");
      if (size == null) dart.nullFailed(I[0], 173, 34, "size");
      let paint = ui.Paint.new();
      let tickCount = activity_indicator._kAlphaValues[$length];
      canvas.save();
      canvas.translate(dart.notNull(size.width) / 2.0, dart.notNull(size.height) / 2.0);
      let activeTick = (dart.notNull(tickCount) * dart.notNull(this.position.value))[$floor]();
      for (let i = 0; i < dart.notNull(tickCount) * dart.notNull(this.progress); i = i + 1) {
        let t = (i - activeTick)[$modulo](tickCount);
        paint.color = this.activeColor.withAlpha(dart.notNull(this.progress) < 1 ? 147 : activity_indicator._kAlphaValues[$_get](t));
        canvas.drawRRect(this.tickFundamentalRRect, paint);
        canvas.rotate(6.283185307179586 / dart.notNull(tickCount));
      }
      canvas.restore();
    }
    shouldRepaint(oldPainter) {
      activity_indicator._CupertinoActivityIndicatorPainter.as(oldPainter);
      if (oldPainter == null) dart.nullFailed(I[0], 194, 57, "oldPainter");
      return !dart.equals(oldPainter.position, this.position) || !dart.equals(oldPainter.activeColor, this.activeColor) || oldPainter.progress != this.progress;
    }
  };
  (activity_indicator._CupertinoActivityIndicatorPainter.new = function(opts) {
    let position = opts && 'position' in opts ? opts.position : null;
    if (position == null) dart.nullFailed(I[0], 151, 19, "position");
    let activeColor = opts && 'activeColor' in opts ? opts.activeColor : null;
    if (activeColor == null) dart.nullFailed(I[0], 152, 19, "activeColor");
    let radius = opts && 'radius' in opts ? opts.radius : null;
    if (radius == null) dart.nullFailed(I[0], 153, 19, "radius");
    let progress = opts && 'progress' in opts ? opts.progress : null;
    if (progress == null) dart.nullFailed(I[0], 154, 19, "progress");
    this.position = position;
    this.activeColor = activeColor;
    this.radius = radius;
    this.progress = progress;
    this.tickFundamentalRRect = new ui.RRect.fromLTRBXY(-dart.notNull(radius) / 10, -dart.notNull(radius) / 3.0, dart.notNull(radius) / 10, -dart.notNull(radius), dart.notNull(radius) / 10, dart.notNull(radius) / 10);
    activity_indicator._CupertinoActivityIndicatorPainter.__proto__.new.call(this, {repaint: position});
    ;
  }).prototype = activity_indicator._CupertinoActivityIndicatorPainter.prototype;
  dart.addTypeTests(activity_indicator._CupertinoActivityIndicatorPainter);
  dart.addTypeCaches(activity_indicator._CupertinoActivityIndicatorPainter);
  dart.setMethodSignature(activity_indicator._CupertinoActivityIndicatorPainter, () => ({
    __proto__: dart.getMethods(activity_indicator._CupertinoActivityIndicatorPainter.__proto__),
    paint: dart.fnType(dart.void, [ui.Canvas, ui.Size]),
    shouldRepaint: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(activity_indicator._CupertinoActivityIndicatorPainter, I[1]);
  dart.setFieldSignature(activity_indicator._CupertinoActivityIndicatorPainter, () => ({
    __proto__: dart.getFields(activity_indicator._CupertinoActivityIndicatorPainter.__proto__),
    position: dart.finalFieldType(animation.Animation$(core.double)),
    activeColor: dart.finalFieldType(ui.Color),
    radius: dart.finalFieldType(core.double),
    progress: dart.finalFieldType(core.double),
    tickFundamentalRRect: dart.finalFieldType(ui.RRect)
  }));
  var Color_value = dart.privateName(ui, "Color.value");
  var CupertinoDynamicColor_darkHighContrastElevatedColor = dart.privateName(colors, "CupertinoDynamicColor.darkHighContrastElevatedColor");
  var CupertinoDynamicColor_highContrastElevatedColor = dart.privateName(colors, "CupertinoDynamicColor.highContrastElevatedColor");
  var CupertinoDynamicColor_darkElevatedColor = dart.privateName(colors, "CupertinoDynamicColor.darkElevatedColor");
  var CupertinoDynamicColor_elevatedColor = dart.privateName(colors, "CupertinoDynamicColor.elevatedColor");
  var CupertinoDynamicColor_darkHighContrastColor = dart.privateName(colors, "CupertinoDynamicColor.darkHighContrastColor");
  var CupertinoDynamicColor_highContrastColor = dart.privateName(colors, "CupertinoDynamicColor.highContrastColor");
  var CupertinoDynamicColor_darkColor = dart.privateName(colors, "CupertinoDynamicColor.darkColor");
  var CupertinoDynamicColor_color = dart.privateName(colors, "CupertinoDynamicColor.color");
  var CupertinoDynamicColor__debugResolveContext = dart.privateName(colors, "CupertinoDynamicColor._debugResolveContext");
  var CupertinoDynamicColor__debugLabel = dart.privateName(colors, "CupertinoDynamicColor._debugLabel");
  var CupertinoDynamicColor__effectiveColor = dart.privateName(colors, "CupertinoDynamicColor._effectiveColor");
  dart.defineLazy(activity_indicator, {
    /*activity_indicator._kDefaultIndicatorRadius*/get _kDefaultIndicatorRadius() {
      return 10;
    },
    /*activity_indicator._kActiveTickColor*/get _kActiveTickColor() {
      return C[9] || CT.C9;
    },
    /*activity_indicator._kTwoPI*/get _kTwoPI() {
      return 6.283185307179586;
    },
    /*activity_indicator._kAlphaValues*/get _kAlphaValues() {
      return C[12] || CT.C12;
    },
    /*activity_indicator._partiallyRevealedAlpha*/get _partiallyRevealedAlpha() {
      return 147;
    }
  }, false);
  dart.trackLibraries("packages/flutter/src/cupertino/activity_indicator.dart", {
    "package:flutter/src/cupertino/activity_indicator.dart": activity_indicator
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["activity_indicator.dart"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IA0Da;;;;;;IAKE;;;;;;IAQA;;;;;;;AAIT;IAAkC;;;QA/C/B;QACA;;QACA;;;IADA;IACA;UACM,AAAU,SAAD;UACT,AAAO,MAAD;UACC,aAAP,MAAM,IAAG;IACP,kBAAE;AACX,iFAAW,GAAG;;EAAC;;QASd;QACA;;QACA;;;IADA;IACA;UACM,AAAO,MAAD;UACC,aAAP,MAAM,IAAG;UACT,AAAS,QAAD;UACC,aAAT,QAAQ,KAAI;UACH,aAAT,QAAQ,KAAI;IACT,mBAAE;AACZ,iFAAW,GAAG;;EAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BI;IAAW;;;AAAX;;IAAW;;AAIjB,MAAX;AAIL,MAHD,oBAAc,kFAEL;AAGT,oBAAI,AAAO;AACW,QAApB,AAAY;;IAEhB;;uDAGgD;;AACd,MAA1B,sBAAgB,SAAS;AAC/B,UAAI,AAAO,AAAU,yBAAG,AAAU,SAAD;AAC/B,sBAAI,AAAO;AACW,UAApB,AAAY;;AAEM,UAAlB,AAAY;;IAElB;;AAIuB,MAArB,AAAY;AACG,MAAT;IACR;;UAG0B;AACxB,YAAO,iCACiB,aAAd,AAAO,sBAAS,UACH,aAAd,AAAO,sBAAS,UAChB,oCACI,yEACG,gCAEgB,qCAAQ,sCAAmB,OAAO,WACpD,AAAO,8BACL,AAAO;IAIzB;;;2DA/CyB;;;;EAgD3B;;;;;;;;;;;;;;;;;;;;;;UA4CoB,QAAa;UAAb;UAAa;AACjB,kBAAQ;AACV,sBAAY,AAAc;AAEvB,MAAb,AAAO,MAAD;AAC+C,MAArD,AAAO,MAAD,WAAsB,aAAX,AAAK,IAAD,UAAS,KAAiB,aAAZ,AAAK,IAAD,WAAU;AAEvC,uBAA0C,CAAlB,aAAV,SAAS,iBAAG,AAAS;AAE7C,eAAS,IAAI,GAAG,AAAE,CAAD,GAAa,aAAV,SAAS,iBAAG,gBAAY,IAAF,AAAE,CAAC,GAAH;AAC9B,gBAAqB,CAAhB,AAAE,CAAD,GAAG,UAAU,WAAI,SAAS;AAE+B,QADzE,AAAM,KAAD,SAAS,AACT,2BAAmB,aAAT,iBAAW,UAA8B,AAAa,wCAAC,CAAC;AAC1B,QAA7C,AAAO,MAAD,WAAW,2BAAsB,KAAK;AACV,QAAlC,AAAO,MAAD,QAAgB,iCAAE,SAAS;;AAGnB,MAAhB,AAAO,MAAD;IACR;;+DAGsD;;AACpD,YAA2B,AACe,cADnC,AAAW,UAAD,WAAa,kBACH,aAAvB,AAAW,UAAD,cAAgB,qBAC1B,AAAW,AAAS,UAAV,aAAa;IAC7B;;;QA/CgB;;QACA;;QACA;;QACA;;IAHA;IACA;IACA;IACA;IACW,4BAAQ,wBAC3B,AAAQ,cAAP,MAAM,QACP,AAAQ,cAAP,MAAM,IAAG,KACH,aAAP,MAAM,QACN,cAAC,MAAM,GACA,aAAP,MAAM,QACC,aAAP,MAAM;AAER,6FAAe,QAAQ;;EAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAxJnB,2CAAwB;;;MAGzB,oCAAiB;;;MAqHhB,0BAAO;;;MAIJ,gCAAa;;;MAYnB,0CAAuB","file":"../../../../../../../../F:/packages/flutter/src/cupertino/activity_indicator.dart.lib.js"}');
  // Exports:
  return {
    src__cupertino__activity_indicator: activity_indicator
  };
}));

//# sourceMappingURL=activity_indicator.dart.lib.js.map
>>>>>>> 9fed4871f8cb2e24becf4331c7fe9d1d7a564371
